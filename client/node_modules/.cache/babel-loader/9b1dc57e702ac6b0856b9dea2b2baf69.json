{"ast":null,"code":"var _jsxFileName = \"/Users/dazhuangchen/Desktop/Coding/Crown-Clothing/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { firestore, convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionsRef = firestore.collection(\"collections\"); // path collections\n\n    this.unsubscribeFromSnapshot = collectionsRef.onSnapshot(async snapshot => {\n      //snapshot is actually object we can see inside. like doc(),empty()...\n      const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`\n        /* component={CollectionsOverview}*/\n        ,\n        render: props => {\n          /*#__PURE__*/\n          _jsxDEV(CollectionPageWithSpinner, {\n            isLoading: {\n              loading\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`\n        /*component={CollectionPage}*/\n        ,\n        render: props => {\n          /*#__PURE__*/\n          _jsxDEV(CollectionPageWithSpinner, {\n            isLoading: {\n              loading\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage); // import SHOP_DATA from \"./shop.data\"; //json.file\n\n/* class ShopPage extends React.Component {\n  constructor(props) {\n    super(props);\n    /*\n    props can initial this.prop, this will be direct to class ShopPage, \n    In most cases, the value of this is determined by how a function is called (bind or call/apply) or runtime like windows.\n    this.state = {\n      collections: SHOP_DATA,\n    \n      SHOP_DATA will trun into \n      collections: [\n       {\n        id: 1,\n        title: \"Hats\",\n        routeName: \"hats\",\n        items: [..]\n        ...\n       }\n      ],...\n    };\n    \n  } */\n\n/* \n  render() {\n    const { collections } = this.state;\n    /* \n    1. Braces {} are used during the declaration of Object Literals, or to enclose blocks of code, \n       but const { collections } = this.state is use for Destructuring assignment.\n    2. Parenthesis () in JavaScript are used for function calls.\n    3. Brackets [] are typically mostly used for accessing the properties of an Object (or the elements of an Array), \n       so mylist[3] fetches the fourth element in the Array.\n    */\n//{match} = path from app.js /shop\n\n/*  /shop/ match has parameter path/params/url/exist... */\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["/Users/dazhuangchen/Desktop/Coding/Crown-Clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","firestore","convertCollectionSnapshotToMap","updateCollections","CollectionsOverview","CollectionPage","WithSpinner","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionsRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,SADF,EAEEC,8BAFF,QAGO,+BAHP;AAIA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACF,mBAAD,CAAjD;KAAMG,6B;AACN,MAAMC,yBAAyB,GAAGF,WAAW,CAACD,cAAD,CAA7C;MAAMG,yB;;AAEN,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAErCC,KAFqC,GAE7B;AACNC,MAAAA,OAAO,EAAE;AADH,KAF6B;AAAA,SAOrCC,uBAPqC,GAOX,IAPW;AAAA;;AAQrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEX,MAAAA;AAAF,QAAwB,KAAKY,KAAnC;AACA,UAAMC,cAAc,GAAGf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAAvB,CAFkB,CAE0C;;AAC5D,SAAKJ,uBAAL,GAA+BG,cAAc,CAACE,UAAf,CAC7B,MAAOC,QAAP,IAAoB;AAClB;AACA,YAAMC,cAAc,GAAGlB,8BAA8B,CAACiB,QAAD,CAArD;AACAhB,MAAAA,iBAAiB,CAACiB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAN4B,CAA/B;AAQD;;AACDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK;AAAG;AAFzB;AAGE,QAAA,MAAM,EAAGT,KAAD,IAAW;AACjB;AAAA,kBAAC,yBAAD;AAA2B,YAAA,SAAS,EAAE;AAAEH,cAAAA;AAAF;AAAtC;AAAA;AAAA;AAAA;AAAA;AACD;AALH;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,KAAD;AACE,QAAA,IAAI,EAAG,GAAEW,KAAK,CAACC,IAAK;AACpB;AAFF;AAGE,QAAA,MAAM,EAAGT,KAAD,IAAW;AACjB;AAAA,kBAAC,yBAAD;AAA2B,YAAA,SAAS,EAAE;AAAEH,cAAAA;AAAF;AAAtC;AAAA;AAAA;AAAA;AAAA;AACD;AALH;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AAzCoC;;AA4CvC,MAAMa,kBAAkB,GAAIC,QAAD,KAAe;AACxCvB,EAAAA,iBAAiB,EAAGiB,cAAD,IACjBM,QAAQ,CAACvB,iBAAiB,CAACiB,cAAD,CAAlB;AAF8B,CAAf,CAA3B;;AAKA,eAAepB,OAAO,CAAC,IAAD,EAAOyB,kBAAP,CAAP,CAAkChB,QAAlC,CAAf,C,CAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  firestore,\n  convertCollectionSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  //we don't need construtor && super to keep this because react help us to do it.\n  state = {\n    loading: true,\n  };\n\n  // now we need to retrieve shopdata from firebase\n  unsubscribeFromSnapshot = null;\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    const collectionsRef = firestore.collection(\"collections\"); // path collections\n    this.unsubscribeFromSnapshot = collectionsRef.onSnapshot(\n      async (snapshot) => {\n        //snapshot is actually object we can see inside. like doc(),empty()...\n        const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n        updateCollections(collectionsMap);\n        this.setState({ loading: false });\n      }\n    );\n  }\n  render() {\n    const { match } = this.props;\n    const { loading } = this.state;\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`} /* component={CollectionsOverview}*/\n          render={(props) => {\n            <CollectionPageWithSpinner isLoading={{ loading }} />;\n          }}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          /*component={CollectionPage}*/\n          render={(props) => {\n            <CollectionPageWithSpinner isLoading={{ loading }} />;\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateCollections: (collectionsMap) =>\n    dispatch(updateCollections(collectionsMap)),\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n\n// import SHOP_DATA from \"./shop.data\"; //json.file\n\n/* class ShopPage extends React.Component {\n  constructor(props) {\n    super(props);\n    /*\n    props can initial this.prop, this will be direct to class ShopPage, \n    In most cases, the value of this is determined by how a function is called (bind or call/apply) or runtime like windows.\n    this.state = {\n      collections: SHOP_DATA,\n    \n      SHOP_DATA will trun into \n      collections: [\n       {\n        id: 1,\n        title: \"Hats\",\n        routeName: \"hats\",\n        items: [..]\n        ...\n       }\n      ],...\n    };\n    \n  } */\n/* \n  render() {\n    const { collections } = this.state;\n    /* \n    1. Braces {} are used during the declaration of Object Literals, or to enclose blocks of code, \n       but const { collections } = this.state is use for Destructuring assignment.\n    2. Parenthesis () in JavaScript are used for function calls.\n    3. Brackets [] are typically mostly used for accessing the properties of an Object (or the elements of an Array), \n       so mylist[3] fetches the fourth element in the Array.\n    */\n//{match} = path from app.js /shop\n\n/*  /shop/ match has parameter path/params/url/exist... */\n"]},"metadata":{},"sourceType":"module"}