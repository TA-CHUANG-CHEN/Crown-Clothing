{"ast":null,"code":"var _jsxFileName = \"/Users/dazhuangchen/Desktop/Coding/Crown-Clothing/client/src/components/stripe-button/stripe-button.component.jsx\";\nimport React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StripeCheckoutButton = ({\n  price\n}) => {\n  const priceForStripe = price * 100;\n  const publishableKey = \"pk_test_51Ix4EGGRC00fpJdOUbItU1G6TpFaEeL1TIkgTyM03XGjrWzmm8Oe1O2haFg3pq6LbJKG8chVR7llGwFcgZEQjDlG003cLwL90U\";\n  const data = {\n    data: {\n      amount: priceForStripe,\n      token\n    }\n  };\n\n  const onToken = token => {\n    axios({\n      url: \"payment\",\n      method: \"post\"\n    }).then(res => {\n      alert(`payment successful`);\n    }).catch(error => console.log(\"there was an issue with your payment\"));\n  };\n\n  const tokenGo = token => {\n    const fetchOption = {\n      method: \"POST\",\n      // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\",\n      // no-cors, *cors, same-origin\n      cache: \"default\",\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\",\n      // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      redirect: \"follow\",\n      // manual, *follow, error\n      referrerPolicy: \"no-referrer\",\n      // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n    };\n    fetch(\"payment\", fetchOption).then(res => res.json()).then(res => {\n      alert(`payment successful`);\n    }).catch(error => console.log(\"there was an issue with your payment\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(StripeCheckout, {\n    currency: \"TWD\",\n    label: \"Pay Now\",\n    name: \"CRWN Clothing Ltd.\",\n    billingAddress: true,\n    shippingAddress: true // Note: enabling both zipCode checks and billing or shipping address will\n    // cause zipCheck to be pulled from billing address (set to shipping if none provided).\n    ,\n    image: \"https://stripe.com/img/documentation/checkout/marketplace.png\",\n    description: `Just Pay for what u choose, douche!! totoal is ${price}` // the pop-in header subtitle\n    ,\n    amount: priceForStripe,\n    panelLabel: \"Pay Now!! mother fucker!\",\n    token: (onToken, tokenGo) // submit callback\n    ,\n    stripeKey: publishableKey\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_c = StripeCheckoutButton;\nexport default StripeCheckoutButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"StripeCheckoutButton\");","map":{"version":3,"sources":["/Users/dazhuangchen/Desktop/Coding/Crown-Clothing/client/src/components/stripe-button/stripe-button.component.jsx"],"names":["React","StripeCheckout","axios","StripeCheckoutButton","price","priceForStripe","publishableKey","data","amount","token","onToken","url","method","then","res","alert","catch","error","console","log","tokenGo","fetchOption","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","fetch","json"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC1C,QAAMC,cAAc,GAAGD,KAAK,GAAG,GAA/B;AACA,QAAME,cAAc,GAClB,6GADF;AAEA,QAAMC,IAAI,GAAG;AACXA,IAAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAEH,cADJ;AAEJI,MAAAA;AAFI;AADK,GAAb;;AAMA,QAAMC,OAAO,GAAID,KAAD,IAAW;AACzBP,IAAAA,KAAK,CAAC;AACJS,MAAAA,GAAG,EAAE,SADD;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KAAD,CAAL,CAIGC,IAJH,CAISC,GAAD,IAAS;AACbC,MAAAA,KAAK,CAAE,oBAAF,CAAL;AACD,KANH,EAOGC,KAPH,CAOUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAY,sCAAZ,CAPpB;AAQD,GATD;;AAUA,QAAMC,OAAO,GAAIX,KAAD,IAAW;AACzB,UAAMY,WAAW,GAAG;AAClBT,MAAAA,MAAM,EAAE,MADU;AACF;AAChBU,MAAAA,IAAI,EAAE,MAFY;AAEJ;AACdC,MAAAA,KAAK,EAAE,SAHW;AAGA;AAClBC,MAAAA,WAAW,EAAE,aAJK;AAIU;AAC5BC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT,CAEP;;AAFO,OALS;AASlBC,MAAAA,QAAQ,EAAE,QATQ;AASE;AACpBC,MAAAA,cAAc,EAAE,aAVE;AAUa;AAC/BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAevB,IAAf,CAXY,CAWU;;AAXV,KAApB;AAaAwB,IAAAA,KAAK,CAAC,SAAD,EAAYV,WAAZ,CAAL,CACGR,IADH,CACSC,GAAD,IAASA,GAAG,CAACkB,IAAJ,EADjB,EAEGnB,IAFH,CAESC,GAAD,IAAS;AACbC,MAAAA,KAAK,CAAE,oBAAF,CAAL;AACD,KAJH,EAKGC,KALH,CAKUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAY,sCAAZ,CALpB;AAMD,GApBD;;AAsBA,sBACE,QAAC,cAAD;AACE,IAAA,QAAQ,EAAC,KADX;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,IAAI,EAAC,oBAHP;AAIE,IAAA,cAAc,MAJhB;AAKE,IAAA,eAAe,MALjB,CAME;AACA;AAPF;AAQE,IAAA,KAAK,EAAC,+DARR;AASE,IAAA,WAAW,EAAG,kDAAiDf,KAAM,EATvE,CAS0E;AAT1E;AAUE,IAAA,MAAM,EAAEC,cAVV;AAWE,IAAA,UAAU,EAAC,0BAXb;AAYE,IAAA,KAAK,GAAGK,OAAO,EAAEU,OAAZ,CAZP,CAY6B;AAZ7B;AAaE,IAAA,SAAS,EAAEd;AAbb;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA3DD;;KAAMH,oB;AA6DN,eAAeA,oBAAf","sourcesContent":["import React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport axios from \"axios\";\n\nconst StripeCheckoutButton = ({ price }) => {\n  const priceForStripe = price * 100;\n  const publishableKey =\n    \"pk_test_51Ix4EGGRC00fpJdOUbItU1G6TpFaEeL1TIkgTyM03XGjrWzmm8Oe1O2haFg3pq6LbJKG8chVR7llGwFcgZEQjDlG003cLwL90U\";\n  const data = {\n    data: {\n      amount: priceForStripe,\n      token,\n    },\n  };\n  const onToken = (token) => {\n    axios({\n      url: \"payment\",\n      method: \"post\",\n    })\n      .then((res) => {\n        alert(`payment successful`);\n      })\n      .catch((error) => console.log(\"there was an issue with your payment\"));\n  };\n  const tokenGo = (token) => {\n    const fetchOption = {\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"default\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\", // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      redirect: \"follow\", // manual, *follow, error\n      referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n      body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n    };\n    fetch(\"payment\", fetchOption)\n      .then((res) => res.json())\n      .then((res) => {\n        alert(`payment successful`);\n      })\n      .catch((error) => console.log(\"there was an issue with your payment\"));\n  };\n\n  return (\n    <StripeCheckout\n      currency=\"TWD\"\n      label=\"Pay Now\"\n      name=\"CRWN Clothing Ltd.\"\n      billingAddress\n      shippingAddress\n      // Note: enabling both zipCode checks and billing or shipping address will\n      // cause zipCheck to be pulled from billing address (set to shipping if none provided).\n      image=\"https://stripe.com/img/documentation/checkout/marketplace.png\"\n      description={`Just Pay for what u choose, douche!! totoal is ${price}`} // the pop-in header subtitle\n      amount={priceForStripe}\n      panelLabel=\"Pay Now!! mother fucker!\"\n      token={(onToken, tokenGo)} // submit callback\n      stripeKey={publishableKey}\n    />\n  );\n};\n\nexport default StripeCheckoutButton;\n"]},"metadata":{},"sourceType":"module"}