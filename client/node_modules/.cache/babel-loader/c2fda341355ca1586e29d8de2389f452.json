{"ast":null,"code":"import ShopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_STARTS\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\n/* export const fetchCollectionsStartAsync = () => {\n  // that how thunk doing, handle asynchronuous function to dispatch action.\n  return (dispatch) => {\n    const collectionsRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart()); // step:1 fetching api\n    collectionsRef\n      .get()\n      .then((snapshot) => {\n        const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n        dispatch(fetchCollectionsSuccess(collectionsMap)); // step:2  success to access data\n      })\n      .catch((error) => dispatch(fetchCollectionsFailure(error.message))); // step:2  catch if fetch failure,\n  };\n}; */","map":{"version":3,"sources":["/Users/dazhuangchen/Desktop/Coding/Crown-Clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_STARTS","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SACEC,SADF,EAEEC,8BAFF,QAGO,+BAHP;AAKA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,cAAD,KAAqB;AAC1DH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADoC;AAE1DC,EAAAA,OAAO,EAAEF;AAFiD,CAArB,CAAhC;AAKP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,KAAmB;AACxDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBADkC;AAExDH,EAAAA,OAAO,EAAEE;AAF+C,CAAnB,CAAhC;AAKP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import ShopActionTypes from \"./shop.types\";\nimport {\n  firestore,\n  convertCollectionSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_STARTS,\n});\n\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap,\n});\n\nexport const fetchCollectionsFailure = (errorMessage) => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage,\n});\n\n/* export const fetchCollectionsStartAsync = () => {\n  // that how thunk doing, handle asynchronuous function to dispatch action.\n  return (dispatch) => {\n    const collectionsRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart()); // step:1 fetching api\n    collectionsRef\n      .get()\n      .then((snapshot) => {\n        const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n        dispatch(fetchCollectionsSuccess(collectionsMap)); // step:2  success to access data\n      })\n      .catch((error) => dispatch(fetchCollectionsFailure(error.message))); // step:2  catch if fetch failure,\n  };\n}; */\n"]},"metadata":{},"sourceType":"module"}