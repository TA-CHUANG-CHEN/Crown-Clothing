{"ast":null,"code":"var _jsxFileName = \"/Users/dazhuangchen/Desktop/Coding/Crown-Clothing/client/src/components/stripe-button/stripe-button.component.jsx\";\nimport React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StripeCheckoutButton = ({\n  price\n}) => {\n  const priceForStripe = price * 100;\n  const publishableKey = \"pk_test_51Ix4EGGRC00fpJdOUbItU1G6TpFaEeL1TIkgTyM03XGjrWzmm8Oe1O2haFg3pq6LbJKG8chVR7llGwFcgZEQjDlG003cLwL90U\";\n\n  const onToken = token => {\n    axios({\n      url: \"payment\",\n      method: \"post\",\n      data: {\n        amount: priceForStripe,\n        token\n      }\n    }).then(res => {\n      alert(`payment successful`);\n    }).catch(error => console.log(\"there was an issue with your payment\"));\n  };\n\n  const tokenGo = token => {\n    fetch();\n  };\n\n  return /*#__PURE__*/_jsxDEV(StripeCheckout, {\n    currency: \"TWD\",\n    label: \"Pay Now\",\n    name: \"CRWN Clothing Ltd.\",\n    billingAddress: true,\n    shippingAddress: true // Note: enabling both zipCode checks and billing or shipping address will\n    // cause zipCheck to be pulled from billing address (set to shipping if none provided).\n    ,\n    image: \"https://stripe.com/img/documentation/checkout/marketplace.png\",\n    description: `Just Pay for what u choose, douche!! totoal is ${price}` // the pop-in header subtitle\n    ,\n    amount: priceForStripe,\n    panelLabel: \"Pay Now!! mother fucker!\",\n    token: (onToken, tokenGo) // submit callback\n    ,\n    stripeKey: publishableKey\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_c = StripeCheckoutButton;\nexport default StripeCheckoutButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"StripeCheckoutButton\");","map":{"version":3,"sources":["/Users/dazhuangchen/Desktop/Coding/Crown-Clothing/client/src/components/stripe-button/stripe-button.component.jsx"],"names":["React","StripeCheckout","axios","StripeCheckoutButton","price","priceForStripe","publishableKey","onToken","token","url","method","data","amount","then","res","alert","catch","error","console","log","tokenGo","fetch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC1C,QAAMC,cAAc,GAAGD,KAAK,GAAG,GAA/B;AACA,QAAME,cAAc,GAClB,6GADF;;AAGA,QAAMC,OAAO,GAAIC,KAAD,IAAW;AACzBN,IAAAA,KAAK,CAAC;AACJO,MAAAA,GAAG,EAAE,SADD;AAEJC,MAAAA,MAAM,EAAE,MAFJ;AAGJC,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAEP,cADJ;AAEJG,QAAAA;AAFI;AAHF,KAAD,CAAL,CAQGK,IARH,CAQSC,GAAD,IAAS;AACbC,MAAAA,KAAK,CAAE,oBAAF,CAAL;AACD,KAVH,EAWGC,KAXH,CAWUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAY,sCAAZ,CAXpB;AAYD,GAbD;;AAcA,QAAMC,OAAO,GAAIZ,KAAD,IAAW;AACzBa,IAAAA,KAAK;AACN,GAFD;;AAGA,sBACE,QAAC,cAAD;AACE,IAAA,QAAQ,EAAC,KADX;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,IAAI,EAAC,oBAHP;AAIE,IAAA,cAAc,MAJhB;AAKE,IAAA,eAAe,MALjB,CAME;AACA;AAPF;AAQE,IAAA,KAAK,EAAC,+DARR;AASE,IAAA,WAAW,EAAG,kDAAiDjB,KAAM,EATvE,CAS0E;AAT1E;AAUE,IAAA,MAAM,EAAEC,cAVV;AAWE,IAAA,UAAU,EAAC,0BAXb;AAYE,IAAA,KAAK,GAAGE,OAAO,EAAEa,OAAZ,CAZP,CAY6B;AAZ7B;AAaE,IAAA,SAAS,EAAEd;AAbb;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAvCD;;KAAMH,oB;AAyCN,eAAeA,oBAAf","sourcesContent":["import React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport axios from \"axios\";\n\nconst StripeCheckoutButton = ({ price }) => {\n  const priceForStripe = price * 100;\n  const publishableKey =\n    \"pk_test_51Ix4EGGRC00fpJdOUbItU1G6TpFaEeL1TIkgTyM03XGjrWzmm8Oe1O2haFg3pq6LbJKG8chVR7llGwFcgZEQjDlG003cLwL90U\";\n\n  const onToken = (token) => {\n    axios({\n      url: \"payment\",\n      method: \"post\",\n      data: {\n        amount: priceForStripe,\n        token,\n      },\n    })\n      .then((res) => {\n        alert(`payment successful`);\n      })\n      .catch((error) => console.log(\"there was an issue with your payment\"));\n  };\n  const tokenGo = (token) => {\n    fetch()\n  };\n  return (\n    <StripeCheckout\n      currency=\"TWD\"\n      label=\"Pay Now\"\n      name=\"CRWN Clothing Ltd.\"\n      billingAddress\n      shippingAddress\n      // Note: enabling both zipCode checks and billing or shipping address will\n      // cause zipCheck to be pulled from billing address (set to shipping if none provided).\n      image=\"https://stripe.com/img/documentation/checkout/marketplace.png\"\n      description={`Just Pay for what u choose, douche!! totoal is ${price}`} // the pop-in header subtitle\n      amount={priceForStripe}\n      panelLabel=\"Pay Now!! mother fucker!\"\n      token={(onToken, tokenGo)} // submit callback\n      stripeKey={publishableKey}\n    />\n  );\n};\n\nexport default StripeCheckoutButton;\n"]},"metadata":{},"sourceType":"module"}