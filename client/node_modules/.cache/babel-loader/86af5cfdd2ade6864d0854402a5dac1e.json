{"ast":null,"code":"var _jsxFileName = \"/Users/dazhuangchen/Desktop/Coding/Crown-Clothing/src/components/sign-up/sign-up.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FromInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-buttom.component\";\nimport { emailSignUpStart } from \"../../redux/user/user.actions\"; //import { auth, creatUserProfileDocument } from \"../../firebase/firebase.utils\";\n\nimport \"./sign-up.component.style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = ({\n  emailSignUpStart\n}) => {\n  _s();\n\n  const [userCredential, setCredential] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredential;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\" password don't match\");\n      return;\n    }\n\n    emailSignUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCredential({ ...userCredential,\n      [name]: value\n    }); // name === input elements name attritube when u need multiple input be controlled.\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \" I don't have a account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \" Sign up with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FromInput, {\n        type: \"text\",\n        name: \"displayName\",\n        value: displayName,\n        onChange: handleChange,\n        label: \"Display Name\",\n        autoComplete: \"name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FromInput, {\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: handleChange,\n        label: \"email\",\n        autoComplete: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FromInput, {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: handleChange,\n        label: \"password\",\n        autoComplete: \"new-password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FromInput, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: handleChange,\n        label: \"confirm Password\",\n        autoComplete: \"new-password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"submit\",\n        children: \" SIGN UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUp, \"wgA0+Drdfhh5rFEX4KrwXzEgpRU=\");\n\n_c = SignUp;\n\nconst mapDispatchToProps = ditpatch => ({\n  emailSignUpStart: userCredentials => ditpatch(emailSignUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/dazhuangchen/Desktop/Coding/Crown-Clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FromInput","CustomButton","emailSignUpStart","SignUp","userCredential","setCredential","displayName","email","password","confirmPassword","handleSubmit","e","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","ditpatch","userCredentials"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FromInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-buttom.component\";\nimport { emailSignUpStart } from \"../../redux/user/user.actions\";\n//import { auth, creatUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport \"./sign-up.component.style.scss\";\n\nconst SignUp = ({ emailSignUpStart }) => {\n  const [userCredential, setCredential] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const { displayName, email, password, confirmPassword } = userCredential;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      alert(\" password don't match\");\n      return;\n    }\n    emailSignUpStart({ displayName, email, password });\n  };\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setCredential({ ...userCredential, [name]: value }); // name === input elements name attritube when u need multiple input be controlled.\n  };\n\n  return (\n    <div className=\"sign-up\">\n      <h2 className=\"title\"> I don't have a account</h2>\n      <span> Sign up with your email and password</span>\n      <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n        <FromInput\n          type=\"text\"\n          name=\"displayName\"\n          value={displayName}\n          onChange={handleChange}\n          label=\"Display Name\"\n          autoComplete=\"name\"\n          required\n        />\n        <FromInput\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          label=\"email\"\n          autoComplete=\"email\"\n          required\n        />\n        <FromInput\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          label=\"password\"\n          autoComplete=\"new-password\"\n          required\n        />\n        <FromInput\n          type=\"password\"\n          name=\"confirmPassword\"\n          value={confirmPassword}\n          onChange={handleChange}\n          label=\"confirm Password\"\n          autoComplete=\"new-password\"\n          required\n        />\n        <CustomButton type=\"submit\"> SIGN UP</CustomButton>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (ditpatch) => ({\n  emailSignUpStart: (userCredentials) =>\n    ditpatch(emailSignUpStart(userCredentials)),\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}