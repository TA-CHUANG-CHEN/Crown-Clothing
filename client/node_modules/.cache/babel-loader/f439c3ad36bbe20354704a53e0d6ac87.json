{"ast":null,"code":"var _jsxFileName = \"/Users/dazhuangchen/Desktop/Coding/Crown-Clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport FromInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-buttom.component\";\nimport { emailSignUpStart } from \"../../redux/user/user.actions\"; //import { auth, creatUserProfileDocument } from \"../../firebase/firebase.utils\";\n\nimport \"./sign-up.component.style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        displayName,\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n      const {\n        emailSignUpStart\n      } = this.props;\n      console.log();\n\n      if (password !== confirmPassword) {\n        alert(\" password don't match\");\n        return;\n      }\n\n      emailSignUpStart({\n        displayName,\n        email,\n        password\n      });\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      }); // name === input elements name attritube when u need multiple input be controlled.\n    };\n\n    this.state = {\n      displayName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    };\n  }\n\n  render() {\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-up\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \" I don't have a account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" Sign up with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"sign-up-form\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FromInput, {\n          type: \"text\",\n          name: \"displayName\",\n          value: displayName,\n          onChange: this.handleChange,\n          label: \"Display Name\",\n          autoComplete: \"name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FromInput, {\n          type: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: this.handleChange,\n          label: \"email\",\n          autoComplete: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FromInput, {\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: this.handleChange,\n          label: \"password\",\n          autoComplete: \"new-password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FromInput, {\n          type: \"password\",\n          name: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: this.handleChange,\n          label: \"confirm Password\",\n          autoComplete: \"new-password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \" SIGN UP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = ditpatch => ({\n  emailSignUpStart: userCredentials => ditpatch(emailSignUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/dazhuangchen/Desktop/Coding/Crown-Clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","connect","FromInput","CustomButton","emailSignUpStart","SignUp","Component","constructor","handleSubmit","e","preventDefault","displayName","email","password","confirmPassword","state","props","console","log","alert","handleChange","name","value","target","setState","render","mapDispatchToProps","ditpatch","userCredentials"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport FromInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-buttom.component\";\nimport { emailSignUpStart } from \"../../redux/user/user.actions\";\n//import { auth, creatUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport \"./sign-up.component.style.scss\";\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      displayName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n    };\n  }\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    const { displayName, email, password, confirmPassword } = this.state;\n    const { emailSignUpStart } = this.props;\n    console.log()\n    if (password !== confirmPassword) {\n      alert(\" password don't match\");\n      return;\n    }\n    emailSignUpStart({displayName, email, password});\n  };\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value }); // name === input elements name attritube when u need multiple input be controlled.\n  };\n  render() {\n    const { displayName, email, password, confirmPassword } = this.state;\n    return (\n      <div className=\"sign-up\">\n        <h2 className=\"title\"> I don't have a account</h2>\n        <span> Sign up with your email and password</span>\n        <form className=\"sign-up-form\" onSubmit={this.handleSubmit}>\n          <FromInput\n            type=\"text\"\n            name=\"displayName\"\n            value={displayName}\n            onChange={this.handleChange}\n            label=\"Display Name\"\n            autoComplete=\"name\"\n            required\n          />\n          <FromInput\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={this.handleChange}\n            label=\"email\"\n            autoComplete=\"email\"\n            required\n          />\n          <FromInput\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleChange}\n            label=\"password\"\n            autoComplete=\"new-password\"\n            required\n          />\n          <FromInput\n            type=\"password\"\n            name=\"confirmPassword\"\n            value={confirmPassword}\n            onChange={this.handleChange}\n            label=\"confirm Password\"\n            autoComplete=\"new-password\"\n            required\n          />\n          <CustomButton type=\"submit\"> SIGN UP</CustomButton>\n        </form>\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = (ditpatch) => ({\n  emailSignUpStart: (userCredentials) =>\n    ditpatch(emailSignUpStart(userCredentials)),\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}