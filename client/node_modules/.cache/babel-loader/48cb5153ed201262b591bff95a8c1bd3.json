{"ast":null,"code":"import React from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\"; // Make sure to call `loadStripe` outside of a component’s render to avoid\n// recreating the `Stripe` object on every render.\n\nconst stripePromise = loadStripe(\"pk_test_51Ix4EGGRC00fpJdOUbItU1G6TpFaEeL1TIkgTyM03XGjrWzmm8Oe1O2haFg3pq6LbJKG8chVR7llGwFcgZEQjDlG003cLwL90U\");\n\nconst success = () => alert(\"fuck ya! \");\n\nconst price = ({\n  price\n}) => price;\n\nconst StripeCheckoutButton = () => {\n  const StripeCheckout = async event => {\n    // When the customer clicks on the button, redirect them to Checkout.\n    const stripe = await stripePromise;\n    const {\n      error\n    } = await stripe.redirectToCheckout({\n      lineItems: [{\n        price: {\n          price\n        } // Replace with the ID of your price\n\n      }],\n      mode: \"payment\",\n      successUrl: {\n        success\n      }\n    }); // If `redirectToCheckout` fails due to a browser or network\n    // error, display the localized error message to your customer\n    // using `error.message`.\n  };\n};\n\n_c = StripeCheckoutButton;\nexport default StripeCheckoutButton;\n/* import React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\n\nconst StripeCheckoutButton = ({ price }) => {\n  const priceForStripe = price * 100;\n  const publishableKey =\n    \"pk_test_51Ix4EGGRC00fpJdOUbItU1G6TpFaEeL1TIkgTyM03XGjrWzmm8Oe1O2haFg3pq6LbJKG8chVR7llGwFcgZEQjDlG003cLwL90U\";\n\n  const onToken = (token) => {\n    console.log(token);\n    alert(\"Payment Successful Bitch! \");\n  };\n  return (\n    <StripeCheckout\n      currency=\"TWD\"\n      label=\"Pay Now\"\n      name=\"CRWN Clothing Ltd.\"\n      billingAddress\n      shippingAddress\n      // Note: enabling both zipCode checks and billing or shipping address will\n      // cause zipCheck to be pulled from billing address (set to shipping if none provided).\n      image=\"https://stripe.com/img/documentation/checkout/marketplace.png\"\n      description={`Just Pay for what u choose, douche!! totoal is ${price}`} // the pop-in header subtitle\n      amount={priceForStripe}\n      panelLabel=\"Pay Now!! mother fucker!\"\n      token={onToken} // submit callback\n      stripeKey={publishableKey}\n    />\n  );\n};\n\nexport default StripeCheckoutButton;\n */\n\nvar _c;\n\n$RefreshReg$(_c, \"StripeCheckoutButton\");","map":{"version":3,"sources":["/Users/dazhuangchen/Desktop/Coding/Crown-Clothing/src/components/stripe-button/stripe-button.component.jsx"],"names":["React","loadStripe","stripePromise","success","alert","price","StripeCheckoutButton","StripeCheckout","event","stripe","error","redirectToCheckout","lineItems","mode","successUrl"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B,C,CACA;AACA;;AACA,MAAMC,aAAa,GAAGD,UAAU,CAC9B,6GAD8B,CAAhC;;AAIA,MAAME,OAAO,GAAG,MAAMC,KAAK,CAAC,WAAD,CAA3B;;AACA,MAAMC,KAAK,GAAG,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAeA,KAA7B;;AACA,MAAMC,oBAAoB,GAAG,MAAI;AACjC,QAAMC,cAAc,GAAG,MAAOC,KAAP,IAAiB;AACtC;AACA,UAAMC,MAAM,GAAG,MAAMP,aAArB;AACA,UAAM;AAAEQ,MAAAA;AAAF,QAAY,MAAMD,MAAM,CAACE,kBAAP,CAA0B;AAChDC,MAAAA,SAAS,EAAE,CACT;AACEP,QAAAA,KAAK,EAAE;AAAEA,UAAAA;AAAF,SADT,CACoB;;AADpB,OADS,CADqC;AAMhDQ,MAAAA,IAAI,EAAE,SAN0C;AAOhDC,MAAAA,UAAU,EAAE;AAAEX,QAAAA;AAAF;AAPoC,KAA1B,CAAxB,CAHsC,CAatC;AACA;AACA;AACD,GAhBD;AAgBE,CAjBF;;KAAMG,oB;AAmBN,eAAeA,oBAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\n// Make sure to call `loadStripe` outside of a component’s render to avoid\n// recreating the `Stripe` object on every render.\nconst stripePromise = loadStripe(\n  \"pk_test_51Ix4EGGRC00fpJdOUbItU1G6TpFaEeL1TIkgTyM03XGjrWzmm8Oe1O2haFg3pq6LbJKG8chVR7llGwFcgZEQjDlG003cLwL90U\"\n);\n\nconst success = () => alert(\"fuck ya! \");\nconst price = ({ price }) => price;\nconst StripeCheckoutButton = ()=>{\nconst StripeCheckout = async (event) => {\n  // When the customer clicks on the button, redirect them to Checkout.\n  const stripe = await stripePromise;\n  const { error } = await stripe.redirectToCheckout({\n    lineItems: [\n      {\n        price: { price }, // Replace with the ID of your price\n      },\n    ],\n    mode: \"payment\",\n    successUrl: { success },\n  });\n\n  // If `redirectToCheckout` fails due to a browser or network\n  // error, display the localized error message to your customer\n  // using `error.message`.\n}};\n\nexport default StripeCheckoutButton;\n\n/* import React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\n\nconst StripeCheckoutButton = ({ price }) => {\n  const priceForStripe = price * 100;\n  const publishableKey =\n    \"pk_test_51Ix4EGGRC00fpJdOUbItU1G6TpFaEeL1TIkgTyM03XGjrWzmm8Oe1O2haFg3pq6LbJKG8chVR7llGwFcgZEQjDlG003cLwL90U\";\n\n  const onToken = (token) => {\n    console.log(token);\n    alert(\"Payment Successful Bitch! \");\n  };\n  return (\n    <StripeCheckout\n      currency=\"TWD\"\n      label=\"Pay Now\"\n      name=\"CRWN Clothing Ltd.\"\n      billingAddress\n      shippingAddress\n      // Note: enabling both zipCode checks and billing or shipping address will\n      // cause zipCheck to be pulled from billing address (set to shipping if none provided).\n      image=\"https://stripe.com/img/documentation/checkout/marketplace.png\"\n      description={`Just Pay for what u choose, douche!! totoal is ${price}`} // the pop-in header subtitle\n      amount={priceForStripe}\n      panelLabel=\"Pay Now!! mother fucker!\"\n      token={onToken} // submit callback\n      stripeKey={publishableKey}\n    />\n  );\n};\n\nexport default StripeCheckoutButton;\n */\n"]},"metadata":{},"sourceType":"module"}