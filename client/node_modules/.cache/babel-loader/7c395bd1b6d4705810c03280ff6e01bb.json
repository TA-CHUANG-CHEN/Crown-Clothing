{"ast":null,"code":"import _regeneratorRuntime from\"/Users/dazhuangchen/Desktop/Coding/Crown-Clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/dazhuangchen/Desktop/Coding/Crown-Clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/dazhuangchen/Desktop/Coding/Crown-Clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import firebase from\"firebase/app\";import\"firebase/firestore\";import\"firebase/auth\";var config={//Your web app's Firebase configuration\napiKey:\"AIzaSyBDeW4okDdFyONHAkEVX0p2kCWCQAVrcE4\",authDomain:\"crown-db-37538.firebaseapp.com\",projectId:\"crown-db-37538\",storageBucket:\"crown-db-37538.appspot.com\",messagingSenderId:\"982516620431\",appId:\"1:982516620431:web:bbb8ab26ece7cddd5ee4fa\",measurementId:\"G-9420K6Q3GK\"};export var creatUserProfileDocument=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth,additionalData){var userRef,snapshot,displayName,email,photoURL,createdAt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userAuth){_context.next=2;break;}return _context.abrupt(\"return\");case 2:// if there is no userAuth exist then return.\nuserRef=firestore.doc(\"users/\".concat(userAuth.uid));/* \n  queries method, doc() from firebase NoSQL cloud databasse collection/documentID \n  here is user.uid whatever uid exist or not google will give u one\n  */_context.next=5;return userRef.get();case 5:snapshot=_context.sent;if(snapshot.exists){_context.next=17;break;}// if doc.users.userAuth.uid return false(dont exist) then create.\ndisplayName=userAuth.displayName,email=userAuth.email,photoURL=userAuth.photoURL;// get userdata from userauth (google, email/password...)\ncreatedAt=new Date();_context.prev=9;_context.next=12;return userRef.set(_objectSpread({// set == create doc.users.displayname...\ndisplayName:displayName,email:email,createdAt:createdAt,photoURL:photoURL},additionalData));case 12:_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](9);console.log(\"error creating user\",_context.t0.message);case 17:return _context.abrupt(\"return\",userRef);case 18:case\"end\":return _context.stop();}}},_callee,null,[[9,14]]);}));return function creatUserProfileDocument(_x,_x2){return _ref.apply(this,arguments);};}();// Initialize Firebase\nfirebase.initializeApp(config);export var auth=firebase.auth();//The Firebase Auth service interface.\nexport var firestore=firebase.firestore();//The Cloud Firestore service interface.\nvar provider=new firebase.auth.GoogleAuthProvider();//Interface that represents an auth provider.\nprovider.setCustomParameters({prompt:\"select_account\"});// The authorization server prompts the user to select a user account\nexport var signInWithGoogle=function signInWithGoogle(){return auth.signInWithPopup(provider);};export default firebase;","map":{"version":3,"sources":["/Users/dazhuangchen/Desktop/Coding/Crown-Clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","creatUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","snapshot","exists","displayName","email","photoURL","createdAt","Date","set","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"ofAAA,MAAOA,CAAAA,QAAP,KAAqB,cAArB,CACA,MAAO,oBAAP,CACA,MAAO,eAAP,CAEA,GAAMC,CAAAA,MAAM,CAAG,CACb;AACAC,MAAM,CAAE,yCAFK,CAGbC,UAAU,CAAE,gCAHC,CAIbC,SAAS,CAAE,gBAJE,CAKbC,aAAa,CAAE,4BALF,CAMbC,iBAAiB,CAAE,cANN,CAObC,KAAK,CAAE,2CAPM,CAQbC,aAAa,CAAE,cARF,CAAf,CAWA,MAAO,IAAMC,CAAAA,wBAAwB,0FAAG,iBAAOC,QAAP,CAAiBC,cAAjB,+KAEjCD,QAFiC,iEAEf;AACjBE,OAHgC,CAGtBC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAHsB,CAItC;AACF;AACA;AACA,IAPwC,sBAQfH,CAAAA,OAAO,CAACI,GAAR,EARe,QAQhCC,QARgC,kBASjCA,QAAQ,CAACC,MATwB,0BAUpC;AACQC,WAX4B,CAWKT,QAXL,CAW5BS,WAX4B,CAWfC,KAXe,CAWKV,QAXL,CAWfU,KAXe,CAWRC,QAXQ,CAWKX,QAXL,CAWRW,QAXQ,CAWe;AAC7CC,SAZ8B,CAYlB,GAAIC,CAAAA,IAAJ,EAZkB,wCAc5BX,CAAAA,OAAO,CAACY,GAAR,gBACJ;AACAL,WAAW,CAAXA,WAFI,CAGJC,KAAK,CAALA,KAHI,CAIJE,SAAS,CAATA,SAJI,CAKJD,QAAQ,CAARA,QALI,EAMDV,cANC,EAd4B,0FAuBlCc,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAmC,YAAMC,OAAzC,EAvBkC,wCA0B/Bf,OA1B+B,uEAAH,kBAAxBH,CAAAA,wBAAwB,gDAA9B,CA4BP;AACAT,QAAQ,CAAC4B,aAAT,CAAuB3B,MAAvB,EAEA,MAAO,IAAM4B,CAAAA,IAAI,CAAG7B,QAAQ,CAAC6B,IAAT,EAAb,CAA8B;AACrC,MAAO,IAAMhB,CAAAA,SAAS,CAAGb,QAAQ,CAACa,SAAT,EAAlB,CAAwC;AAE/C,GAAMiB,CAAAA,QAAQ,CAAG,GAAI9B,CAAAA,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB,CAAyD;AACzDD,QAAQ,CAACE,mBAAT,CAA6B,CAAEC,MAAM,CAAE,gBAAV,CAA7B,EAA4D;AAC5D,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAML,CAAAA,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAAN,EAAzB,CACP,cAAe9B,CAAAA,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  //Your web app's Firebase configuration\n  apiKey: \"AIzaSyBDeW4okDdFyONHAkEVX0p2kCWCQAVrcE4\",\n  authDomain: \"crown-db-37538.firebaseapp.com\",\n  projectId: \"crown-db-37538\",\n  storageBucket: \"crown-db-37538.appspot.com\",\n  messagingSenderId: \"982516620431\",\n  appId: \"1:982516620431:web:bbb8ab26ece7cddd5ee4fa\",\n  measurementId: \"G-9420K6Q3GK\",\n};\n\nexport const creatUserProfileDocument = async (userAuth, additionalData) => {\n  //userAuth get back from Auth\n  if (!userAuth) return; // if there is no userAuth exist then return.\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  /* \n  queries method, doc() from firebase NoSQL cloud databasse collection/documentID \n  here is user.uid whatever uid exist or not google will give u one\n  */\n  const snapshot = await userRef.get(); // (CRUD) Read = retrive contents from users/userAuth.uid(userRef)\n  if (!snapshot.exists) {\n    // if doc.users.userAuth.uid return false(dont exist) then create.\n    const { displayName, email, photoURL } = userAuth; // get userdata from userauth (google, email/password...)\n    const createdAt = new Date();\n    try {\n      await userRef.set({\n        // set == create doc.users.displayname...\n        displayName,\n        email,\n        createdAt,\n        photoURL,\n        ...additionalData,\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n  return userRef; //if doc.user.don't have data then create, if exist, return doc.user.displayname...\n};\n// Initialize Firebase\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth(); //The Firebase Auth service interface.\nexport const firestore = firebase.firestore(); //The Cloud Firestore service interface.\n\nconst provider = new firebase.auth.GoogleAuthProvider(); //Interface that represents an auth provider.\nprovider.setCustomParameters({ prompt: \"select_account\" }); // The authorization server prompts the user to select a user account\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}