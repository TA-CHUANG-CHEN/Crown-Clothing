{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { SignInSuccess, SignInFailure, signOutSuccess, signOutFailure, SignUpSuccess, SignUpFailure } from \"./user.actions\";\nimport { auth, googleProvider, creatUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nexport function* getsnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(creatUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getsnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* SignInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getsnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n_c = SignInWithEmail;\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getsnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onSignUpWithEmail({\n  payload: {\n    displayName,\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield call(creatUserProfileDocument, (user, {\n      displayName\n    }));\n    yield put(SignUpSuccess(\"Sign up success!\", {\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(SignUpFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onEmailSignUpStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_UP_START, onSignUpWithEmail);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signIn);\n}\nexport function* onGoolgeSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, SignInWithEmail);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoolgeSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onEmailSignUpStart)]);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInWithEmail\");","map":{"version":3,"sources":["/Users/dazhuangchen/Desktop/Coding/Crown-Clothing/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","UserActionTypes","SignInSuccess","SignInFailure","signOutSuccess","signOutFailure","SignUpSuccess","SignUpFailure","auth","googleProvider","creatUserProfileDocument","getCurrentUser","getsnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","SignInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","onSignUpWithEmail","displayName","createUserWithEmailAndPassword","additionalData","onCheckUserSession","CHECK_USER_SESSION","onEmailSignUpStart","EMAIL_SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","signIn","onGoolgeSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport {\n  SignInSuccess,\n  SignInFailure,\n  signOutSuccess,\n  signOutFailure,\n  SignUpSuccess,\n  SignUpFailure,\n} from \"./user.actions\";\nimport {\n  auth,\n  googleProvider,\n  creatUserProfileDocument,\n  getCurrentUser,\n} from \"../../firebase/firebase.utils\";\n\nexport function* getsnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(creatUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({ id: userSnapshot, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getsnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n\nexport function* SignInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getsnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getsnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nexport function* onSignUpWithEmail({\n  payload: { displayName, email, password },\n}) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield call(creatUserProfileDocument, (user, { displayName }));\n    yield put(\n      SignUpSuccess(\"Sign up success!\", {\n        user,\n        additionalData: { displayName },\n      })\n    );\n  } catch (error) {\n    yield put(SignUpFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onEmailSignUpStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_UP_START, onSignUpWithEmail);\n}\n\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS,signIn);\n}\n\nexport function* onGoolgeSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, SignInWithEmail);\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoolgeSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n    call(onEmailSignUpStart),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}