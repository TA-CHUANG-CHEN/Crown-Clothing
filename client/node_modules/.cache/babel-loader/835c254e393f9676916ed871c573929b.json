{"ast":null,"code":"var _jsxFileName = \"/Users/dazhuangchen/Desktop/Coding/Crown-Clothing/src/App.js\";\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport CheckoutPage from \"./pages/checkout/checkout.component\";\nimport \"./App.css\";\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport Header from \"./components/header/header.component\";\nimport SignInSignUpPage from \"./pages/sing-in-sign-up/sign-in-sign-up.component\";\nimport { auth, creatUserProfileDocument } from \"./firebase/firebase.utils\";\nimport { setCurrentUser } from \"./redux/user/user.actions\";\nimport { selectCurrentUser } from \"./redux/user/user.selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const setCurrentUser = this.props.setCurrentUser; // we need react to listening user state.\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      //auth() The Firebase Auth service interface listening auth state like sign-in props is user.\n      //creatUserProfileDocument(user);user(props) => creatUserProfileDocument\n      if (userAuth) {\n        const userRef = await creatUserProfileDocument(userAuth); // if don't exist create do or return user directly.\n\n        userRef.onSnapshot(snapShot => {\n          // const snapshot = await userRef.get(); / retrive uid from users/userAuth.uid\n          setCurrentUser({\n            id: snapShot.id,\n            //  userRef.get().id...\n            ...snapShot.data() //use data() retrived property from  userRef.get().data().\n\n          });\n        });\n      }\n\n      setCurrentUser(userAuth); // CurrentUser is no.\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: HomePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/shop\",\n          component: ShopPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/checkout\",\n          component: CheckoutPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/signin\",\n          render: () => this.props.currentUser ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(SignInSignUpPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/dazhuangchen/Desktop/Coding/Crown-Clothing/src/App.js"],"names":["React","Route","Switch","Redirect","connect","createStructuredSelector","CheckoutPage","HomePage","ShopPage","Header","SignInSignUpPage","auth","creatUserProfileDocument","setCurrentUser","selectCurrentUser","App","Component","unsubscribeFromAuth","componentDidMount","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","id","data","componentWillUnmount","render","currentUser","mapStateToProps","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport CheckoutPage from \"./pages/checkout/checkout.component\";\nimport \"./App.css\";\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport Header from \"./components/header/header.component\";\nimport SignInSignUpPage from \"./pages/sing-in-sign-up/sign-in-sign-up.component\";\nimport { auth, creatUserProfileDocument } from \"./firebase/firebase.utils\";\nimport { setCurrentUser } from \"./redux/user/user.actions\";\nimport { selectCurrentUser } from \"./redux/user/user.selectors\";\n\nclass App extends React.Component {\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n    const setCurrentUser = this.props.setCurrentUser;\n    // we need react to listening user state.\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n      //auth() The Firebase Auth service interface listening auth state like sign-in props is user.\n      //creatUserProfileDocument(user);user(props) => creatUserProfileDocument\n      if (userAuth) {\n        const userRef = await creatUserProfileDocument(userAuth); // if don't exist create do or return user directly.\n        userRef.onSnapshot((snapShot) => {\n          // const snapshot = await userRef.get(); / retrive uid from users/userAuth.uid\n          setCurrentUser({\n            id: snapShot.id, //  userRef.get().id...\n            ...snapShot.data(), //use data() retrived property from  userRef.get().data().\n          });\n        });\n      }\n      setCurrentUser(userAuth); // CurrentUser is no.\n    });\n  }\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n  render() {\n    return (\n      <div>\n        <Header />\n        <Switch>\n          {/* 1. Renders the first child <Route> or <Redirect> that matches the location, here will be specific URL unless page in root directory */}\n          <Route exact path=\"/\" component={HomePage} />\n          {/* \n        1. All route props (match, location and history) are available to Homepages \n        2. Routes without a path always match, path='/' means when homepage will be render URL with /. like http://www.test.com/ <- start from here.\n        3. When exact == true, will only match if the path matches the location.pathname exactly.\n        */}\n          <Route path=\"/shop\" component={ShopPage} />\n          <Route exact path=\"/checkout\" component={CheckoutPage} />\n          <Route\n            exact\n            path=\"/signin\"\n            render={() =>\n              this.props.currentUser ? (\n                <Redirect to=\"/\" />\n              ) : (\n                <SignInSignUpPage />\n              )\n            }\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}