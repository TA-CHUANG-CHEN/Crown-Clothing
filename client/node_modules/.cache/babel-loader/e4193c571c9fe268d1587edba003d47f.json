{"ast":null,"code":"import _objectSpread from\"/Users/dazhuangchen/Desktop/Coding/Crown-Clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import CartActionTypes from\"./cart.types\";import{addItemToCart,removeItemFromCart}from\"./cart.utils\";var INITIAL_STATE={hidden:true,cartItems:[]};var cartReducer=function cartReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:INITIAL_STATE;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case CartActionTypes.TOGGLE_CART_HIDDEN:return _objectSpread(_objectSpread({},state),{},{hidden:!state.hidden});case CartActionTypes.ADD_ITEM:return _objectSpread(_objectSpread({},state),{},{cartItems:addItemToCart(state.cartItems,action.payload)});case CartActionTypes.REMOVE_ITEM:return _objectSpread(_objectSpread({},state),{},{cartItems:removeItemFromCart(state.cartItems,action.payload)});case CartActionTypes.CLEAR_ITEM_FROM_CART:return _objectSpread(_objectSpread({},state),{},{cartItems:state.cartItems.filter(function(cartItems){return cartItems.id!==action.payload.id;})// if cartItems.id == action.payload.id, means same item.\n});default:return state;}};export default cartReducer;","map":{"version":3,"sources":["/Users/dazhuangchen/Desktop/Coding/Crown-Clothing/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","addItemToCart","removeItemFromCart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","REMOVE_ITEM","CLEAR_ITEM_FROM_CART","filter","id"],"mappings":"uKAAA,MAAOA,CAAAA,eAAP,KAA4B,cAA5B,CACA,OAASC,aAAT,CAAwBC,kBAAxB,KAAkD,cAAlD,CAEA,GAAMC,CAAAA,aAAa,CAAG,CACpBC,MAAM,CAAE,IADY,CAEpBC,SAAS,CAAE,EAFS,CAAtB,CAKA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAmC,IAAlCC,CAAAA,KAAkC,2DAA1BJ,aAA0B,IAAXK,CAAAA,MAAW,2CACrD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKT,CAAAA,eAAe,CAACU,kBAArB,CACE,sCACKH,KADL,MAEEH,MAAM,CAAE,CAACG,KAAK,CAACH,MAFjB,GAIF,IAAKJ,CAAAA,eAAe,CAACW,QAArB,CACE,sCACKJ,KADL,MAEEF,SAAS,CAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,CAAkBG,MAAM,CAACI,OAAzB,CAF1B,GAIF,IAAKZ,CAAAA,eAAe,CAACa,WAArB,CACE,sCACKN,KADL,MAEEF,SAAS,CAAEH,kBAAkB,CAACK,KAAK,CAACF,SAAP,CAAkBG,MAAM,CAACI,OAAzB,CAF/B,GAIF,IAAKZ,CAAAA,eAAe,CAACc,oBAArB,CACE,sCACKP,KADL,MAEEF,SAAS,CAAEE,KAAK,CAACF,SAAN,CAAgBU,MAAhB,CACT,SAACV,SAAD,QAAeA,CAAAA,SAAS,CAACW,EAAV,GAAiBR,MAAM,CAACI,OAAP,CAAeI,EAA/C,EADS,CAER;AAJL,GAMF,QACE,MAAOT,CAAAA,KAAP,CAxBJ,CA0BD,CA3BD,CA6BA,cAAeD,CAAAA,WAAf","sourcesContent":["import CartActionTypes from \"./cart.types\";\nimport { addItemToCart, removeItemFromCart } from \"./cart.utils\";\n\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: [],\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return {\n        ...state,\n        hidden: !state.hidden,\n      };\n    case CartActionTypes.ADD_ITEM:\n      return {\n        ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload),\n      };\n    case CartActionTypes.REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload),\n      };\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(\n          (cartItems) => cartItems.id !== action.payload.id\n        ), // if cartItems.id == action.payload.id, means same item.\n      };\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n"]},"metadata":{},"sourceType":"module"}