{"ast":null,"code":"var _jsxFileName = \"/Users/dazhuangchen/Desktop/Coding/Crown-Clothing/src/components/stripe-button/stripe-button.component.jsx\";\nimport React from \"react\"; //import StripeCheckout from \"react-stripe-checkout\";\n\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(\"pk_test_51Ix4EGGRC00fpJdOUbItU1G6TpFaEeL1TIkgTyM03XGjrWzmm8Oe1O2haFg3pq6LbJKG8chVR7llGwFcgZEQjDlG003cLwL90U\");\nexport const StripeCheckoutButton = () => {\n  const handleClick = async event => {\n    // Get Stripe.js instance\n    const stripe = await stripePromise; // Call your backend to create the Checkout Session\n    //const response = await fetch('/create-checkout-session', { method: 'POST' });\n\n    const session = await response.json(); // When the customer clicks on the button, redirect them to Checkout.\n\n    const result = await stripe.redirectToCheckout({\n      sessionId: session.id\n    });\n\n    if (result.error) {// If `redirectToCheckout` fails due to a browser or network\n      // error, display the localized error message to your customer\n      // using `result.error.message`.\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    role: \"link\",\n    onClick: handleClick,\n    children: \"Checkout\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n/* export const StripeCheckoutButton = ({ price }) => {\n  const priceForStripe = price * 100;\n  const publishableKey =\n    \"pk_test_51Ix4EGGRC00fpJdOUbItU1G6TpFaEeL1TIkgTyM03XGjrWzmm8Oe1O2haFg3pq6LbJKG8chVR7llGwFcgZEQjDlG003cLwL90U\";\n\n  const onToken = (token) => {\n    console.log(token);\n    alert(\"Payment Successful Bitch! \");\n  };\n  return (\n    <StripeCheckout\n      currency=\"TWD\"\n      label=\"Pay Now\"\n      name=\"CRWN Clothing Ltd.\"\n      billingAddress\n      shippingAddress\n      // Note: enabling both zipCode checks and billing or shipping address will\n      // cause zipCheck to be pulled from billing address (set to shipping if none provided).\n      image=\"https://stripe.com/img/documentation/checkout/marketplace.png\"\n      description={`Just Pay for what u choose, douche!! totoal is ${price}`} // the pop-in header subtitle\n      amount={priceForStripe}\n      panelLabel=\"Pay Now!! mother fucker!\"\n      token={onToken} // submit callback\n      stripeKey={publishableKey}\n    />\n  );\n};\n */\n\n_c = StripeCheckoutButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"StripeCheckoutButton\");","map":{"version":3,"sources":["/Users/dazhuangchen/Desktop/Coding/Crown-Clothing/src/components/stripe-button/stripe-button.component.jsx"],"names":["React","loadStripe","stripePromise","StripeCheckoutButton","handleClick","event","stripe","session","response","json","result","redirectToCheckout","sessionId","id","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEA,MAAMC,aAAa,GAAGD,UAAU,CAC9B,6GAD8B,CAAhC;AAIA,OAAO,MAAME,oBAAoB,GAAG,MAAM;AACtC,QAAMC,WAAW,GAAG,MAAOC,KAAP,IAAiB;AACjC;AACA,UAAMC,MAAM,GAAG,MAAMJ,aAArB,CAFiC,CAIjC;AACD;;AAEC,UAAMK,OAAO,GAAG,MAAMC,QAAQ,CAACC,IAAT,EAAtB,CAPiC,CASjC;;AACA,UAAMC,MAAM,GAAG,MAAMJ,MAAM,CAACK,kBAAP,CAA0B;AAC7CC,MAAAA,SAAS,EAAEL,OAAO,CAACM;AAD0B,KAA1B,CAArB;;AAIA,QAAIH,MAAM,CAACI,KAAX,EAAkB,CAChB;AACA;AACA;AACD;AACF,GAnBH;;AAoBA,sBACI;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,OAAO,EAAEV,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA1BM;AA4BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KAvDaD,oB","sourcesContent":["import React from \"react\";\n//import StripeCheckout from \"react-stripe-checkout\";\nimport { loadStripe } from \"@stripe/stripe-js\";\n\nconst stripePromise = loadStripe(\n  \"pk_test_51Ix4EGGRC00fpJdOUbItU1G6TpFaEeL1TIkgTyM03XGjrWzmm8Oe1O2haFg3pq6LbJKG8chVR7llGwFcgZEQjDlG003cLwL90U\"\n);\n\nexport const StripeCheckoutButton = () => {\n    const handleClick = async (event) => {\n        // Get Stripe.js instance\n        const stripe = await stripePromise;\n    \n        // Call your backend to create the Checkout Session\n       //const response = await fetch('/create-checkout-session', { method: 'POST' });\n    \n        const session = await response.json();\n    \n        // When the customer clicks on the button, redirect them to Checkout.\n        const result = await stripe.redirectToCheckout({\n          sessionId: session.id,\n        });\n    \n        if (result.error) {\n          // If `redirectToCheckout` fails due to a browser or network\n          // error, display the localized error message to your customer\n          // using `result.error.message`.\n        }\n      };\n    return (\n        <button role=\"link\" onClick={handleClick}>\n          Checkout\n        </button>\n      )\n};\n\n/* export const StripeCheckoutButton = ({ price }) => {\n  const priceForStripe = price * 100;\n  const publishableKey =\n    \"pk_test_51Ix4EGGRC00fpJdOUbItU1G6TpFaEeL1TIkgTyM03XGjrWzmm8Oe1O2haFg3pq6LbJKG8chVR7llGwFcgZEQjDlG003cLwL90U\";\n\n  const onToken = (token) => {\n    console.log(token);\n    alert(\"Payment Successful Bitch! \");\n  };\n  return (\n    <StripeCheckout\n      currency=\"TWD\"\n      label=\"Pay Now\"\n      name=\"CRWN Clothing Ltd.\"\n      billingAddress\n      shippingAddress\n      // Note: enabling both zipCode checks and billing or shipping address will\n      // cause zipCheck to be pulled from billing address (set to shipping if none provided).\n      image=\"https://stripe.com/img/documentation/checkout/marketplace.png\"\n      description={`Just Pay for what u choose, douche!! totoal is ${price}`} // the pop-in header subtitle\n      amount={priceForStripe}\n      panelLabel=\"Pay Now!! mother fucker!\"\n      token={onToken} // submit callback\n      stripeKey={publishableKey}\n    />\n  );\n};\n */\n"]},"metadata":{},"sourceType":"module"}