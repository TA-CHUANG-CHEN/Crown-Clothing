{"ast":null,"code":"var _jsxFileName = \"/Users/dazhuangchen/Desktop/Coding/Crown-Clothing/src/components/stripe-button/stripe-button.component.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { loadStripe } from '@stripe/stripe-js'; // Make sure to call `loadStripe` outside of a component’s render to avoid\n// recreating the `Stripe` object on every render.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('pk_test_51Ix4EGGRC00fpJdOUbItU1G6TpFaEeL1TIkgTyM03XGjrWzmm8Oe1O2haFg3pq6LbJKG8chVR7llGwFcgZEQjDlG003cLwL90U');\n\nfunction App() {\n  const handleClick = async event => {\n    // When the customer clicks on the button, redirect them to Checkout.\n    const stripe = await stripePromise;\n    const {\n      error\n    } = await stripe.redirectToCheckout({\n      lineItems: [{\n        price: 'undefined',\n        // Replace with the ID of your price\n        quantity: 1\n      }],\n      mode: 'payment',\n      successUrl: 'https://example.com/success',\n      cancelUrl: 'https://example.com/cancel'\n    }); // If `redirectToCheckout` fails due to a browser or network\n    // error, display the localized error message to your customer\n    // using `error.message`.\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    role: \"link\",\n    onClick: handleClick,\n    children: \"Checkout\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 17\n}, this), document.getElementById('root'));\nconst price = await stripe.prices.create({\n  unit_amount: 1000,\n  currency: 'usd'\n});\n/* import React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\n\nconst StripeCheckoutButton = ({ price }) => {\n  const priceForStripe = price * 100;\n  const publishableKey =\n    \"pk_test_51Ix4EGGRC00fpJdOUbItU1G6TpFaEeL1TIkgTyM03XGjrWzmm8Oe1O2haFg3pq6LbJKG8chVR7llGwFcgZEQjDlG003cLwL90U\";\n\n  const onToken = (token) => {\n    console.log(token);\n    alert(\"Payment Successful Bitch! \");\n  };\n  return (\n    <StripeCheckout\n      currency=\"TWD\"\n      label=\"Pay Now\"\n      name=\"CRWN Clothing Ltd.\"\n      billingAddress\n      shippingAddress\n      // Note: enabling both zipCode checks and billing or shipping address will\n      // cause zipCheck to be pulled from billing address (set to shipping if none provided).\n      image=\"https://stripe.com/img/documentation/checkout/marketplace.png\"\n      description={`Just Pay for what u choose, douche!! totoal is ${price}`} // the pop-in header subtitle\n      amount={priceForStripe}\n      panelLabel=\"Pay Now!! mother fucker!\"\n      token={onToken} // submit callback\n      stripeKey={publishableKey}\n    />\n  );\n};\n\nexport default StripeCheckoutButton;\n */\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/dazhuangchen/Desktop/Coding/Crown-Clothing/src/components/stripe-button/stripe-button.component.jsx"],"names":["React","ReactDOM","loadStripe","stripePromise","App","handleClick","event","stripe","error","redirectToCheckout","lineItems","price","quantity","mode","successUrl","cancelUrl","render","document","getElementById","prices","create","unit_amount","currency"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,UAAT,QAA2B,mBAA3B,C,CACA;AACA;;;AACA,MAAMC,aAAa,GAAGD,UAAU,CAAC,6GAAD,CAAhC;;AAEA,SAASE,GAAT,GAAe;AACb,QAAMC,WAAW,GAAG,MAAOC,KAAP,IAAiB;AACnC;AACA,UAAMC,MAAM,GAAG,MAAMJ,aAArB;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAY,MAAMD,MAAM,CAACE,kBAAP,CAA0B;AAChDC,MAAAA,SAAS,EAAE,CAAC;AACVC,QAAAA,KAAK,EAAE,WADG;AACU;AACpBC,QAAAA,QAAQ,EAAE;AAFA,OAAD,CADqC;AAKhDC,MAAAA,IAAI,EAAE,SAL0C;AAMhDC,MAAAA,UAAU,EAAE,6BANoC;AAOhDC,MAAAA,SAAS,EAAE;AAPqC,KAA1B,CAAxB,CAHmC,CAYnC;AACA;AACA;AACD,GAfD;;AAgBA,sBACE;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,OAAO,EAAEV,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KAtBQD,G;AAuBTH,QAAQ,CAACe,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB;AACA,MAAMP,KAAK,GAAG,MAAMJ,MAAM,CAACY,MAAP,CAAcC,MAAd,CAAqB;AACrCC,EAAAA,WAAW,EAAE,IADwB;AAErCC,EAAAA,QAAQ,EAAE;AAF2B,CAArB,CAApB;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { loadStripe } from '@stripe/stripe-js';\n// Make sure to call `loadStripe` outside of a component’s render to avoid\n// recreating the `Stripe` object on every render.\nconst stripePromise = loadStripe('pk_test_51Ix4EGGRC00fpJdOUbItU1G6TpFaEeL1TIkgTyM03XGjrWzmm8Oe1O2haFg3pq6LbJKG8chVR7llGwFcgZEQjDlG003cLwL90U');\n\nfunction App() {\n  const handleClick = async (event) => {\n    // When the customer clicks on the button, redirect them to Checkout.\n    const stripe = await stripePromise;\n    const { error } = await stripe.redirectToCheckout({\n      lineItems: [{\n        price: 'undefined', // Replace with the ID of your price\n        quantity: 1,\n      }],\n      mode: 'payment',\n      successUrl: 'https://example.com/success',\n      cancelUrl: 'https://example.com/cancel',\n    });\n    // If `redirectToCheckout` fails due to a browser or network\n    // error, display the localized error message to your customer\n    // using `error.message`.\n  };\n  return (\n    <button role=\"link\" onClick={handleClick}>\n      Checkout\n    </button>\n  );\n}\nReactDOM.render(<App />, document.getElementById('root'));\nconst price = await stripe.prices.create({\n    unit_amount: 1000,\n    currency: 'usd',\n  });\n\n\n/* import React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\n\nconst StripeCheckoutButton = ({ price }) => {\n  const priceForStripe = price * 100;\n  const publishableKey =\n    \"pk_test_51Ix4EGGRC00fpJdOUbItU1G6TpFaEeL1TIkgTyM03XGjrWzmm8Oe1O2haFg3pq6LbJKG8chVR7llGwFcgZEQjDlG003cLwL90U\";\n\n  const onToken = (token) => {\n    console.log(token);\n    alert(\"Payment Successful Bitch! \");\n  };\n  return (\n    <StripeCheckout\n      currency=\"TWD\"\n      label=\"Pay Now\"\n      name=\"CRWN Clothing Ltd.\"\n      billingAddress\n      shippingAddress\n      // Note: enabling both zipCode checks and billing or shipping address will\n      // cause zipCheck to be pulled from billing address (set to shipping if none provided).\n      image=\"https://stripe.com/img/documentation/checkout/marketplace.png\"\n      description={`Just Pay for what u choose, douche!! totoal is ${price}`} // the pop-in header subtitle\n      amount={priceForStripe}\n      panelLabel=\"Pay Now!! mother fucker!\"\n      token={onToken} // submit callback\n      stripeKey={publishableKey}\n    />\n  );\n};\n\nexport default StripeCheckoutButton;\n */\n"]},"metadata":{},"sourceType":"module"}