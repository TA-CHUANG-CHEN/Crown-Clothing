{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { SignInSuccess, SignInFailure, signOutSuccess, signOutFailure, SignUpSuccess, SignUpFailure } from \"./user.actions\";\nimport { auth, googleProvider, creatUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nexport function* getsnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(creatUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getsnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* SignInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getsnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n_c = SignInWithEmail;\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getsnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* SignUpWithEmail({\n  payload: {\n    displayName,\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    const successMessage = \"Sign up success!\"; //yield call(creatUserProfileDocument, (user, { displayName }));\n\n    yield put(SignUpSuccess(successMessage, {\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(SignUpFailure(error));\n  }\n}\n_c2 = SignUpWithEmail;\nexport function* signInAfterSignup(successMessage, {\n  user,\n  additionalData: {\n    displayName\n  }\n}) {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getsnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onEmailSignUpStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_UP_START, SignUpWithEmail);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignup);\n}\nexport function* onGoolgeSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, SignInWithEmail);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoolgeSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onEmailSignUpStart)]);\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignInWithEmail\");\n$RefreshReg$(_c2, \"SignUpWithEmail\");","map":{"version":3,"sources":["/Users/dazhuangchen/Desktop/Coding/Crown-Clothing/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","UserActionTypes","SignInSuccess","SignInFailure","signOutSuccess","signOutFailure","SignUpSuccess","SignUpFailure","auth","googleProvider","creatUserProfileDocument","getCurrentUser","getsnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","SignInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","SignUpWithEmail","displayName","createUserWithEmailAndPassword","successMessage","signInAfterSignup","onCheckUserSession","CHECK_USER_SESSION","onEmailSignUpStart","EMAIL_SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","onGoolgeSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport {\n  SignInSuccess,\n  SignInFailure,\n  signOutSuccess,\n  signOutFailure,\n  SignUpSuccess,\n  SignUpFailure,\n} from \"./user.actions\";\nimport {\n  auth,\n  googleProvider,\n  creatUserProfileDocument,\n  getCurrentUser,\n} from \"../../firebase/firebase.utils\";\n\nexport function* getsnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(\n      creatUserProfileDocument,\n      userAuth,\n      additionalData\n    );\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({ id: userSnapshot, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getsnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n\nexport function* SignInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getsnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getsnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nexport function* SignUpWithEmail({\n  payload: { displayName, email, password },\n}) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    const successMessage = \"Sign up success!\";\n    //yield call(creatUserProfileDocument, (user, { displayName }));\n    yield put(\n      SignUpSuccess(successMessage, {\n        user,\n        additionalData: { displayName },\n      })\n    );\n  } catch (error) {\n    yield put(SignUpFailure(error));\n  }\n}\n\nexport function* signInAfterSignup(\n  successMessage,\n  { user, additionalData: { displayName } }\n) {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getsnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onEmailSignUpStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_UP_START, SignUpWithEmail);\n}\n\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignup);\n}\n\nexport function* onGoolgeSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, SignInWithEmail);\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoolgeSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n    call(onEmailSignUpStart),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}